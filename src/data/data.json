[
	{
		"name": "vue.js",
		"displayName": "Vue.js",
		"logo": "vue.png",
		"stack": [
			"Javascript",
			"Framework"
		],
		"icons": [
			"js",
			"framework"
		],
		"shortDesc": "Blazing fast JavaScript framework",
		"desc": "Vue.js is an open-source lightweight front end JavaScript framework used to build creative user interfaces and high-performance single page web applications with minimum effort. Its inspired by <a href=\"\/angular.js\">Angular<\/a> but its more simple and lightweight. </br> <p>Vue.js take the best from <a href=\"\/react.js\">React<\/a> and <a href=\"\/angular.js\">Angular<\/a>. As example we can mention 2-way data binding as we know from <a href=\"\/angular.js\">Angular<\/a> and so called “Virtual DOM” from <a href=\"\/react.js\">React<\/a>. Its most flexible framework that can be used from small apps to big applications.</p><p> Its fast, progressive, easy to learn plus it can be adapts o developer’s needs. Also need to mention that its small sized framework, well documented and very easy to integrated to any other applications or framework.</p>",
		"pros": {
			"Simplicity": "With Vue.js its easy to type because of using less syntax also easy to read the code. It has single file component system thats states for any component can have HTML,CSS and JavaScript in the same file",
			"BuildInMvc": "Vue has an inbuilt MVC that enables quick and easy configuration.",
			"EasyToLearn": "Vue.js makes it easy for you to learn and over time the code complexity is not growing. No need knowledge of JSX or Typescript",
			"SmallSized": "All framework is gzipped to 18-20kb in size so its beating all major rivals like React or Angular",
			"Integration": "You can integrate Vue.js into another apps or even frameworks. So you can focus more on development instead of integration"
		},
		"cons": {
			"SmallCommunity": "Vue.js does not have big company behind like Facebook or Google(React and Angular).Still with all the props it managed to create community of bakes. Thanks to those bakers and contributors Evan and his team managed to craft one of the most powerful and loved framework the dev community has ever seen."
		},
		"githubStars": "+178k",
		"publishDate": "2014",
		"developerName": "Evan You and Community",
		"githubLink": "https://github.com/vuejs/vue",
		"website": "https://vuejs.org/"
	},
	{
		"name": "react.js",
		"displayName": "React.js",
		"logo": "react.png",
		"stack": [
			"Javascript",
			"Framework"
		],
		"icons": [
			"js",
			"framework"
		],
		"shortDesc": "Fast evolving framework",
		"desc": "<p>React.js created in 2011 by company Facebook. Its open-source JavaScript library(not a full-fledged framework). React can be considered as one of the biggest influential disruptors in the web development.</p><p>Its introduced as component-based, function and declarative programming style for creating interactive user interfaces so react main purpose is view layer in MVC applications.In React you can create components using js,css and htmls to speed up your development. Using those components to build up ui is fast and efficient.</p><p>Each component is its in own and its not allowing to change its state(view) other than dispatching to store data. In this way React secure deterministic view and changes only when you tell him to do.For creating custom components React uses JSX - and JS extension. JSX is easy declarative markup that helps you target many platforms.</p><p>Another think that react has is synthetic events. Basicali its wrapper around DOM events and provides smooth cross-platform event handling. Automatic UI updates that saves CPU and avoid memory leaks.</p><p>Last think to mention its components lifecycle. In basic components can be in many states. React makes sure that component is not mutated in wrong time so you can rely on consistent data and application states. There are many phases that you can work with.</p>",
		"pros": {
			"ReusableComponent": "So importing UI components without breaking a sweat insteading of coding them from scratch.",
			"EasyIntegration": "React allows easy integration with other front-end and back-end framework like the popular PHP framework Laravel to work in tandem without a hitch.",
			"OneDirectionDataFlow": "Means that data can flow only one direction which causes that child components cannot be affected by parent. Make code and application more stable.Simpler syntax - Using JSX JavaScript extension instead JavaScript makes code easy to read",
			"VirualDom": "React compares the virtual DOM to the real DOM to only render components that have changed instead of rendering the whole page. This is the key behind React’s blazing fast performance.",
			"Seo": "After many improvements, React is one of the most SEO friendly front end frameworks that facilitates page crawling. Traditional JavaScript frameworks that rendered content dynamically were notorious for their poor SEO performance and incompatibility with search engine crawlers."
		},
		"cons": {
			"AlthoughJsx": "a simpler syntax that is easier to read and comprehend, it might present an additional learning barrier to new developers.",
			"DeeperCurve": "many developers feels that React learning curve is steeper and bloated with complexity compare to other JS frameworks.",
			"PoorDocumentation": "compare to others React has less documentation. Especial when new releases are launched.",
			"ViewLayerOnly": "react handle only view layer from MVC to handle Model and Controller you need to use other technologies.",
			"FastEvolving": "React.js is super evolving which is on one side good, but can be exhausting and difficult to stay up to day with new features."
		},
		"githubStars": "+162k",
		"publishDate": "2011",
		"developerName": "Facebook",
		"githubLink": "https://github.com/facebook/react/",
		"website": "https://reactjs.org/"
	},
	{
		"name": "icoMoon",
		"displayName": "IcoMoon",
		"logo": "icomoon.png",
		"stack": [
			"Icons"
		],
		"icons": [
			"icons"
		],
		"shortDesc": "Build your own icon pack",
		"desc": "<p>Icomoon provide moder solution to create your own icon pack. Offering 5500+ icons in many formats its one of the best icons pack available.</p> <p>You can choose icon pack that contains same icons or you can create your own collection of icons from other pack. So you can combine font Awesome pack with bootstrap icons for example.</p><p>This is done in IcoMoon app that run in browser. In IcoMoon app you can edit icons like size, color, aling and layer, import your own svg icons and editem. Also option to create svg sprites or download icons in different format, like sprite, png, svg or fonts.</p>",
		"pros": {},
		"cons": {},
		"githubStars": "",
		"publishDate": "",
		"developerName": "IcoMoon",
		"githubLink": "",
		"website": "https://www.icomoon.com/"
	},
	{
		"name": "cypress",
		"displayName": "Cypress",
		"logo": "cypress.png",
		"stack": [
			"Testing",
			"Javascript"
		],
		"icons": [
			"testing",
			"js"
		],
		"shortDesc": "E2E testing with glance",
		"desc": "<p>Cypress is a complete end to end solution for fast reliable testing. You can test literally everything that run in the browser. Cypress was primary develop for developers and tester to speed up your development process.</p><p>Cypress can aslo test mobile web apps with multiple resolutions and user agents. Also contain lots of function and way to test from UI, functions networking and more. In same time has best practices and examples.</p><p>Cypress also offers dashboard for project test results and management. All for free</p>",
		"pros": {
			"TestForEverything": "One tool rule them all. From UI to network",
			"Dashboard": "Dashboard offers nice overview of your testing",
			"HandleEverything": "From UI testing, components, network testing, user agents. One tool for everything"
		},
		"cons": {
			"Large": "With those options and feature cypress is quite heavy and require a lot of resources",
			"Documentation": "In some cases you need to use your imagination to find solution for you"
		},
		"githubStars": "+28k",
		"publishDate": "2018",
		"developerName": "Cypress.io",
		"githubLink": "https://github.com/cypress-io/cypress",
		"website": "https://www.cypress.io/"
	},
	{
		"name": "ember.js",
		"displayName": "Ember.js",
		"logo": "ember.png",
		"stack": [
			"Javascript",
			"Framework"
		],
		"icons": [
			"js",
			"framework"
		],
		"shortDesc": "Build scalable enterprise-scale application",
		"desc": "<p>Ember is open-source Javascript framework used for building enterprise-scale applications. Ember js is based on Model View Viewmodel so its kind of different from other frameworks that focus only on view layer.</p><p>Its use glimmer VM for DOM rendering and for update. In base Ember has Object models that are almost same as Javascript object. For routing is using own routes system that delivers template to users. Templates are consisted of components. Those “bricks” are reusable code that build up your application</p><p>Other main concept are models. Basically object that stores data and maintain them. Around Models there are controllers that act as bridge between views and models. Those are responsible for modification and updates.</p>",
		"pros": {
			"Api": "Ember provides a simple mechanism to work with APIs.",
			"ConventionOverConfiguration": "So you can jump straight away to coding and building your web application.",
			"RichDocumentation": "Ember has rich and detail documentation that you can read and learn.",
			"EmberCli": "One key feature of Angular is 2-way data binding which forms a link between the Model layer and View layer in such a way that each one of them reflects a change in another.",
			"TwoWayDataBinding": "Similar to Angular or Vue.",
			"BackwardCompatibilityWithPreviousVersions": "You can use older functionalities on newsest versions."
		},
		"cons": {
			"SteepLearningCurve": "Newbie Developers might find Ember quite challenging.",
			"Heavy": "Ember is more suited to complex large-scale applications and might prove to be too bulky and heavy for small scale simple applications.",
			"PoorSEO": "Angular struggles with SEO due to acute accessibility issues cornered with search engine crawlers/spiders.",
			"StagnationInPopularity": "Ember has suffered a stagnation over the last few years failing to attract new developers into its fold."
		},
		"githubStars": "+22k",
		"publishDate": "2011",
		"developerName": "Yehuda Katz",
		"githubLink": "https://github.com/emberjs/ember.js",
		"website": "https://emberjs.com/"
	},
	{
		"name": "materializecss",
		"displayName": "Materialize css",
		"logo": "materializecss.png",
		"stack": [
			"Css",
			"Framework"
		],
		"icons": [
			"css",
			"framework"
		],
		"shortDesc": "Material desing done in css",
		"desc": "<p>Materialize CSS is a UI component library which is created with CSS, JavaScript and HTML. It is based on material design developed by Google.</p><p>Materialize is framework that speeds up development. It care about hard thinks so you can focus on details. They also offers some animations and transitions to enchant user experience. This is heavily focused on micro animations.</p><p>Materialize also provide mobile solution not just responsive design but also mobile like touches and gests like swipe.</p>",
		"pros": {
			"MaterialDesign": "Based on one of the most spread design  system. Used for mobile, tablet and desktop.",
			"Animations": "Materialize comes with built in animation system.",
			"Responsive": "Build with responsive in mind. Write one code for many devices."
		},
		"cons": {
			"SlowDevelopment": "Fixing bugs and developing new components takes time.",
			"HardToChange": "If you don't like components its hard to overwrite it."
		},
		"githubStars": "+38k",
		"publishDate": "2014",
		"developerName": "Dogfalo",
		"githubLink": "https://github.com/dogfalo/materialize",
		"website": "https://materializecss.com"
	},
	{
		"name": "materialui",
		"displayName": "Material-ui",
		"logo": "materialui.png",
		"stack": [
			"Components",
			"Javascript",
			"Css"
		],
		"icons": [
			"js",
			"css",
			"Components"
		],
		"shortDesc": "React components for better UI",
		"desc": "<p>Material-ui is world most famous React component library. This components library offers modern material design, huge list of components, various approaches to design and system and powerful theming.</p><p>Everyone knows material design, modern solution for apps and web. Without any changes Material-UI offers that design. With components you are able to build almost anything. In same time Material-UI offers a component API that boosts your powers of development.</p><p>One important thing is that Material-UI is giving you a layer of access. So even junior developer can you this component library without worries. At the same time with the last layer you can change various functions. Also this applies for design also!</p><p>Great feature is also theming. With themes you can create your very unique app design. Material-ui offers overwriting variables and other key elements to change colors, font, behavior and so on.</p>",
		"pros": {
			"MaterialDesign": "Beautiful design for all devices.",
			"HugeComponentLibrary": "Materialize comes with built in animation system.",
			"BasedOnReact": "With fast evolving framework comes fast evolving component library.",
			"Documentation ": "Every component even styles are well documented."
		},
		"cons": {
			"FastDevelopment": "With fast development you can get lost.",
			"Size": "With tons of features comes slow loading times(with big data) and download sizes."
		},
		"githubStars": "+38k",
		"publishDate": "2014",
		"developerName": "Dogfalo",
		"githubLink": "https://github.com/dogfalo/materialize",
		"website": "https://materializecss.com"
	},
	{
		"name": "jest",
		"displayName": "Jest",
		"logo": "jest.png",
		"stack": [
			"Testing",
			"Javascript"
		],
		"icons": [
			"testing",
			"js"
		],
		"shortDesc": "Copomonent testing done right",
		"desc": "<p>Jest is one of the most popular testing frameworks. Its maintained by Facebook and primary focus is on simplicity and support for large projects.</p><p>Jest is written in way that is easy to support major js frameworks like vue, Angular and react. In same time Jest support Typescript, babel and node.js.</p><p>One of great feature is zero configuration. You can jump right into test writing. Every test is run in isolation sou you can be sure about results. Its running blazing fast and comes with more features</p>",
		"pros": {
			"ReadyToUse": "Zero configuration needed to start testing",
			"EasyMocking": "Jest handle your import so its easy mocking",
			"Documentation": "Every function and process is well documented with examples"
		},
		"cons": {
			"Overwhelming": "With those great power you can be easy overwhelmed",
			"SpecialCases": "For special cases you need to install plugins that are not updated often"
		},
		"githubStars": "+35k",
		"publishDate": "2016",
		"developerName": "Facebook",
		"githubLink": "https://github.com/facebook/jest/stargazers",
		"website": "https://jestjs.io/"
	},
	{
		"name": "svelte.js",
		"displayName": "Svelte.js",
		"logo": "svelte.png",
		"stack": [
			"Javascript",
			"Framework"
		],
		"icons": [
			"js",
			"framework"
		],
		"shortDesc": "Typescript based components",
		"desc": "<p>Svelte.js is an open-source component-based front- end JavaScript framework written in Typescript. Svelte was launched in 2016 and since then is gaining popularity. For many developers svelte is consider as game-changing and revolutionary.</p><p>Unlike from other Svelte has no virtual DOM, instead you build components boilerplate-free in simple HTML, CSS, and JavaScript code. Svelte Compiler then compiles this code into small framework-free vanilla JavaScript modules during build time and surgically updates the DOM when the state changes.</p><p>So unlike other traditional frameworks like React or Vue, Svelte does not require high browser processing. As a result, apps built with Svelte are lightning-fast with excellent performance. Other major advantages include zero client-side dependencies, absence of complex state management libraries.</p>",
		"pros": {
			"Components": "Build small chunks of application and reused them all the time.",
			"EasyToLearn": "Svelte has gentle learing curve. Thanks  to simple HTML, CSS and JavaScript no additional knowledge of typescript or JSX is required.",
			"SmallSize": "Its smallest bundle sized among other frameworks.",
			"Performance": "Lacking virtual DOM Svelte relies on reactive programming to surgically update the DOM. As a result, Svelte is able to achieve the fastest rendering compared to almost any other framework and tops most of the performance benchmarks."
		},
		"cons": {
			"SmallUserBase": "Even svelte is easy to learn and small, it has not been adapted in industry.",
			"LackOfTooling": "One of the biggest complaints against Svelte has been its poor immature tooling for debugging applications.",
			"LackOfThirdPartyComponents": "Unlike from others framework there are not any libraries like bootstrap, material ui etc that implements those framework and Svelte.js..",
			"ScalabilityIssues": "Some developers might feel that Svelte is difficult to scale as it doesn’t officially support Typescript."
		},
		"githubStars": "+40k",
		"publishDate": "2016",
		"developerName": "Rich Harris",
		"githubLink": "https://github.com/sveltejs/svelte",
		"website": "https://svelte.dev/"
	},
	{
		"name": "bootstrap",
		"displayName": "Bootstrap",
		"logo": "bootstrap.png",
		"stack": [
			"Css",
			"Framework"
		],
		"icons": [
			"css",
			"framework"
		],
		"shortDesc": "Most popular Css framework",
		"desc": "<p>Bootstrap is the most popular css framework, its not exclusively a CSS framework, its most popular features are the CSS-based ones. It has large number of components that you can use to build prototypes or full web site application.</p><p>Bootstrap offers wide browser compatibility, consistent design and reusable components. In same package you got some javascript components to boost up user experience. So in short with bootstrap you can focus on developing rather than constructing your base components from scratch.</p><p>Most important part is mobile first approach. With this you are able quicky build up responsive website that will work on any device. Another great feature is grid system. Easy to understand and very powerful. This is one of reason why so bootstrap popular.</p><p>Bootstrap has more features and all of them are well documented with examples.</p>",
		"pros": {
			"Components": "Bootstrap has plenty of components that you can use. ",
			"GridSystem": "One of the most useable grid system based on flex.",
			"Documentation": "Bootstrap is well documented and has plenty of examples.",
			"Community": "It has one of the most largest community."
		},
		"cons": {
			"Large": "Bootstrap has lots of components but it comes with lot of code that slow down loading website.",
			"Overrides": "To achieve unique look of your app you have to override the code.",
			"Learning": "Even with big documentation learing all the principles and classes takes time"
		},
		"githubStars": "+146k",
		"publishDate": "2011",
		"developerName": "Original by Twitter, nowdayes by Community",
		"githubLink": "https://github.com/twbs/bootstrap",
		"website": "https://getbootstrap.com/"
	},
	{
		"name": "bulma css",
		"displayName": "Bulma css",
		"logo": "bulma.png",
		"stack": [
			"Css",
			"Framework"
		],
		"icons": [
			"css",
			"framework"
		],
		"shortDesc": "Simple semantics css framework",
		"desc": "<p>Bulma is css framework that allows you to style your page or app with ease. Its based on flexbox and its also automatically adjust page and components to screen size so its also responsive.</p><p>To use bulma you need to type mostly html code. So less css in your html to achieve same things like bootstrap or Foundation. With that its very easy to start new project or implement bulma to existing one. When you start using bulma you will find out that syntax is consistent and intuitive = easy to learn easy to use.</p><p>Based on Sass you can extend components or utility classes by your self, or you can import only components that you really need.</p>",
		"pros": {
			"Responsivity": "The framework is mobile first and works similarly to the popular Bootstrap CSS.",
			"WellDocumented": "Bulma is very well documented, and comes with an active community of people ready to help with projects.",
			"Components": "Bulma comes packed with all of the goods you would expect from a CSS framework, including diverse typography, buttons, forms, tables, and more.",
			"Modular": "The Bulma setup is built with Sass, which means that you can design your framework step by step with only the features you need."
		},
		"cons": {
			"Size": "Bulma is same as Bootstrap comes with huge library of components and varianty but in same time comes the size.",
			"NotFinal": "Bulma is still under development, but almost ready to use airly new - not so large community ready to help you."
		},
		"githubStars": "+42k",
		"publishDate": "2016",
		"developerName": "Jeremy Thomas",
		"githubLink": "https://github.com/jgthms/bulma",
		"website": "https://bulma.io/"
	},
	{
		"name": "mochajs",
		"displayName": "Mocha JS",
		"logo": "mochajs.png",
		"stack": [
			"Testing",
			"Javascript"
		],
		"icons": [
			"testing",
			"js"
		],
		"shortDesc": "Test your code in old way",
		"desc": "<p>MochaJS is test framework for node.js applications. It also support browsers, asynchronou testing, reporting.</p><p>With MochaJs is writing test is easy. Over years it got mark of well-established framework. Thanks to that on internet you find out many tutorials that guide you through installation to usage. Keep in mind that Mocha run tests serially.</p><p>So you will get accurate report and in same time you will see any exception when running tests. You can Mocha with any JS library or with your custom created</p>",
		"pros": {
			"Documentation": "With big documentation and tutorials you will not get overwhelmed",
			"Stable": "Since Mocha is from 2011 its well tested on many project so no worries about major changes"
		},
		"cons": {
			"InitialSetup": "On start Mocha requires more time to make thinks working",
			"Old": "Mocha is here from 2011 and its loosing popularity now"
		},
		"githubStars": "+20k",
		"publishDate": "2011",
		"developerName": "Community",
		"githubLink": "https://github.com/mochajs/",
		"website": "https://mochajs.org/"
	},
	{
		"name": "semanticui",
		"displayName": "Semantic UI",
		"logo": "semanticUI.png",
		"stack": [
			"Css",
			"Framework"
		],
		"icons": [
			"css",
			"framework"
		],
		"shortDesc": "Semantic css for development",
		"desc": "<p>Semantic UI is css framework powered by Less and Jquery. Main goal is to provide lightweight user experience with glance.</p><p>Every component, which is basic building block in Semantic has its own types and states. So even with less components you can still deliver amazing website.</p><p>With this feature comes another. That's naming. Every class has its descriptive name that explain what to expect when you are using it. And as UI kit its using semantic html tags for styling.</p><p>Great feature is also minimalistic styling that opens possibility to customize styling that fits your needs. Its easy to import and customize. What is important is that you can import only components that you want to customize or you want to use in your project.</p>",
		"pros": {
			"VeryEasyToUse": "This reason is one of the main ones for developers. Semantic UI is very intuitive.",
			"LesstTimeToDesignAPage": "Naming Semantic UI classes with meaningful names not only make the learning curve shorter but also makes developing projects more intuitive and faster.",
			"WideVarietyOfThemesAvailable": "Layout variety is a weak point of Bootstrap and a strong point for Semantic UI."
		},
		"cons": {
			"LessResponsiveDesign": "Unlike the previous point, this can be a bigger problem, considering that web designers are increasingly forced to think about a wide variety of devices.",
			"SmallerCommunity": "Few recent updates. Perhaps this is the most worrying point about Semantic UI, and that caused concern among its followers just over a year ago."
		},
		"githubStars": "+48k",
		"publishDate": "2013",
		"developerName": "Semantic Organization",
		"githubLink": "https://github.com/semantic-org/semantic-ui",
		"website": "https://semantic-ui.com/"
	},
	{
		"name": "angular.js",
		"displayName": "Angular.js",
		"logo": "angular.png",
		"stack": [
			"Javascript",
			"Framework"
		],
		"icons": [
			"js",
			"framework"
		],
		"shortDesc": "Most secured frontend framework",
		"desc": "<p>Angular.js is open-source typescript framework develop by google. Main use is for singe-page applications. its use standard HTML as template and extend it to build your own application.</p><p>For creating SPA its use Model View Controller and in same time its making sure that your application runs in every browser - no needed to think about compatibility. Angular also handle updating data and html structure based on data changes. So you can focus on developing application logics.</p><p>For communication between model and view uses scope and functions are written in controller. For some function it has built in services that helps you build your application faster.</p><p>Angular is an open-source typescript based framework by Google used to build client-side single-page web applications. Angular takes inspiration from React with MVW architecture and transfer it to component-based architecture.  For today its one of the most secured front end JavaScript framework. With Angular you can build small application to enterprise-scale applications.</p>",
		"pros": {
			"Components": "After MVW architecture Angular goes with a strictly component-based architecture that facilitates reusability.",
			"ServerPerformance": "Angular supports out of the box caching and tons of features to ensure fast server performance.",
			"Mvc": "Model View Controller in angular establishes key features like scopes and data binding.",
			"TwoWayDataBinding": "One key feature of Angular is 2-way data binding which forms a link between the Model layer and View layer in such a way that each one of them reflects a change in another.",
			"ThirdPartyIntegrations": "Angular offers a rich collection of third party integrations to further enhance their web application."
		},
		"cons": {
			"Typescript": "Typescript offers a lot of advantages but still poses with big learing cure to new developers.",
			"HeavyAndBloated": "Angular size is aroun 550 to 600kb which makes it heavy loading framework. It maybe not suited to small application.",
			"PoorSEO": "Angular struggles with SEO due to acute accessibility issues cornered with search engine crawlers/spiders.",
			"SteepLearningCurve": "Compare to other framework Angular has very steep learing curve and can be daunting for new developers."
		},
		"githubStars": "+59k",
		"publishDate": "2010",
		"developerName": "Google",
		"githubLink": "https://github.com/angular/angular.js",
		"website": "https://angularjs.org/"
	},
	{
		"name": "ui kit",
		"displayName": "UI kit",
		"logo": "uikit.png",
		"stack": [
			"Css",
			"Framework"
		],
		"icons": [
			"css",
			"framework"
		],
		"shortDesc": "Specialsed components based on flexbox",
		"desc": "<p>UI kit is modular css framework for web and applications. It offers all the major features as other css frameworks. On top of that UI kit offers specialised components that enchant your applications, also saves your time.<p>Noticeable feature is also flexbox based layout that is easy to understand and implement.</p><p>UI kit use html to create components and grids. That means its using semantic html tags and for components reusable tags to avoid additional styling.</p><p>Even fact that UI kit is ready to use with fancy components you can customize it with sass or less. Or event build up your custom components. For specialized customization it offers utility classes that expand components possibilities.</p>",
		"pros": {
			"EasyToLearn": "With easy to understand classes ad unique flexbox system easy to start.",
			"Themes": "Comes with plenty ready to use themes.",
			"Animations": "UI kit has build in animateion that you can use.",
			"Modular": "UI kit is develop with modularity in mind."
		},
		"cons": {
			"SlowDevelopment": "With 6 months cycles, bug fixes are more frequent but very slow and selective as well.",
			"NotVeryPopular": "UiKit is not a very popular framework, especially compared to other options. As such it may be hard to find learning resources other than the official documentation."
		},
		"githubStars": "+16k",
		"publishDate": "2017",
		"developerName": "YOOtheme",
		"githubLink": "https://github.com/uikit/uikit",
		"website": "https://getuikit.com/"
	},
	{
		"name": "tailwind css",
		"displayName": "Tailwind css",
		"logo": "tailwind.png",
		"stack": [
			"Css",
			"Framework"
		],
		"icons": [
			"css",
			"framework"
		],
		"shortDesc": "Atomic css for components",
		"desc": "<p>Tailwind is implementing Atomic CSS. The idea behind Tailwind is that instead of starting out with pre-styled cookie-cutter components, you build everything from the ground up using utility classes. That meas you don't have to leave  your html file and you can focus on developing your app.</p><p>Tailwind gives different approach to css(Sass or less). Instead of creating specific component you use some predefined classes that makes your components. Sound easy right? Well its is. All classes are easy to memorize. So within two hours you are able to use tailwind at 100%.</p><p>With this you are able to create responsive layout and components within minutes. Even if you are missing some properties or class you can easily create your own that  fits your needs. Great feature is that tailwind comes with removing unused classes when building for production. In that case your app or website will not contain unused css and speed up your website performance.</p>",
		"pros": {
			"PredefinesClasses": "No needed to create new classes. Everything was already created.",
			"Names": "Tailwind comes with meaningful variables.",
			"BuildingComponents": "With atomic classes you can create components to your needs without overrides."
		},
		"cons": {
			"LackOfComponents": "Every component you have to created by yourself.",
			"Learing": "With Atomic classes you need to learn classes names."
		},
		"githubStars": "+33k",
		"publishDate": "2017",
		"developerName": "Tailwind Labs",
		"githubLink": "https://github.com/tailwindlabs/tailwindcss",
		"website": "https://tailwindcss.com/"
	},
	{
		"name": "foundation",
		"displayName": "Foundation",
		"logo": "foundation.png",
		"stack": [
			"Css",
			"Framework"
		],
		"icons": [
			"css",
			"framework"
		],
		"shortDesc": "Sass based components with ease",
		"desc": "<p>Foundation is advanced css framework focus on designing responsive applications. Developing with foundation is fast thas to Sass compiler. With that speed you can have lots of components ready to use or ready to customize with Sass.</p><p>In same package you got a power grid system that is easy to understand and implementation is easy. You can use some javascript plugins that can make your website alive. Same as bootstrap Foundation is mobile first framework. So no worries about responsive layout and so on. Once you understand basic concepts of foundation you will understand even more difficult components and systems.</p>",
		"pros": {
			"MobileFirst": "Written with mobile first in mind.",
			"EasyToCustomize": "With Sass you can redesign Foundation to your need without overriding.",
			"Semantic": "Everything is semantic. You can have the cleanest markup without sacrificing the utility and speed of Foundation."
		},
		"cons": {
			"LearingCurve": "With those power that Foundation has, the learing his hard.",
			"Support": "Since its not so popular as bootstrap, support from community is bit smaller than for bootstrap."
		},
		"githubStars": "+28k",
		"publishDate": "2011",
		"developerName": "Zubr",
		"githubLink": "https://github.com/foundation/foundation-sites",
		"website": "https://get.foundation/"
	},
	{
		"name": "font Awesome",
		"displayName": "Font Awesome",
		"logo": "fontAwesome.png",
		"stack": [
			"Icons"
		],
		"icons": [
			"icons"
		],
		"shortDesc": "Most popular icon pack",
		"desc": "<p>Font Awesome is one of the most popular icons pack. Started in 2012 and since then its gaining popularity. So far you can get 1600+ icons and even 7800 icons as premium. Yes Font Awesome have some premium icons, that with your needs.</p><p>Another great think is integration with other frameworks or components. Since is so popular every modern CMS, system or framework has plugin or integration with font Awesome.</p><p>With premium you can also create your own special pack that fits your project needs. You can add font awesome icons or add your very own icons to the pack. If you include font awesome css you can get also some modifications and animations that expand possibilities how to use Font Awesome</p>",
		"pros": {},
		"cons": {},
		"githubStars": "+65k",
		"publishDate": "2012",
		"developerName": "Dave Gandy",
		"githubLink": "https://github.com/FortAwesome/Font-Awesome",
		"website": "https://fontawesome.com/"
	},
	{
		"name": "flaticon",
		"displayName": "Flaticon",
		"logo": "flaticon.png",
		"stack": [
			"Icons"
		],
		"icons": [
			"icons"
		],
		"shortDesc": "Biggiest library of graphics",
		"desc": "<p>Flaticon is an online database containing PNG,SVG,ESP, PSD icons that you can use in your project. With the option of creating your own icon collection you get unlimited power of using icons. Even if you have your very special icons, Flaticon allows you to upload them and use them. All icons can be used as font for web or apps or you can download them in various formats like png, svg, psd or eps.</p><p>Flaticon also offers a powerful editor where you can edit icons. You can change color, rotate, scale and move icon in the grid. With those options you can be sure that your icons are unique.</p>",
		"pros": {},
		"cons": {},
		"githubStars": "",
		"publishDate": "",
		"developerName": "Flaticon",
		"githubLink": "",
		"website": "https://www.flaticon.com/"
	},
	{
		"name": "elementui",
		"displayName": "Element UI",
		"logo": "elementui.png",
		"stack": [
			"Components",
			"Css",
			"Javascript"
		],
		"icons": [
			"components",
			"css",
			"js"
		],
		"shortDesc": "Desktop UI library",
		"desc": "<p>Element UI is Vue components library that provide ready to go solution for building websites and applications. This Component library has modern design, huge library of components, translations, animations and options to customize everything.</p><p>With design you can create desktop or mobile apps and with power of SASS you can change colors, shapes basically everything. Element UI has components for layout so not headache with positioning.</p><p>With huge component library you can choose right components four your needs. And the best part is that you can easy change view, behavior and option of each component.</p><p>Main language of Element UI is Chinese, but has documentation in English ofcourse and provide translations plugin so you can create multi language apps.</p><p>Also you can enchant user experience with animations and micro animations that will provide better experience for users.</p><p>Last important think is that ElementUI is written Desktop first. So main focus is on desktop apps, but with power of Sass it has also mobile versions of components and responsive layouts.</p>",
		"pros": {
			"Components": "ElementUI comes with a lot of components that are ready to use.",
			"Fast": "easy and fast prototyping or creating small application.",
			"EasyToLearn": "Vue.js makes it easy for you to learn and over time the code complexity is not growing. No need knowledge of JSX or Typescript",
			"Simple": "design system is intuitive and is keeping your system simple and intuitive for users",
			"Theming": "comes with theming option using variables"
		},
		"cons": {
			"Scale": "with lots of option to use it overwhelming to get know everything.",
			"LoadingTime": "when using a big data its can be slow."
		},
		"githubStars": "+49k",
		"publishDate": "2016",
		"developerName": "Community",
		"githubLink": "https://github.com/ElemeFE/element",
		"website": "https://element.eleme.io/#/en-US"
	},
	{
		"name": "materialDesing",
		"displayName": "Material desing",
		"logo": "materialdesing.png",
		"stack": [
			"Components",
			"Css",
			"Javascript"
		],
		"icons": [
			"components",
			"css",
			"js"
		],
		"shortDesc": "Material desing for all systems",
		"desc": "<p>Material is a design system that can be applied for mobile devices and modern web browsers. It comes with full guidelines on how to use it and give some useful tips.</p><p>With guidance you can build the same visuals as popular Google apps. Without any changes to variables or other elements components and apps or website look will fits all time.</p><p>Material offers also components, its huge pack of them. And every component has variations and guidelines that tells you what to do. If the components is not fitting your needs material design offers alternative that you can use.</p><p>Material also offers to import only components that you need. In same time you can create your own theme that will fit your needs. With power of Sass just overwrite some variables and material design handle rest.</p><p>Great feature is also wrapper for other frameworks that work with material design. In case you don't want to use Material Web Components.</p>",
		"pros": {
			"DesignSystem": "ElementUI comes with a lot of components that are ready to use.",
			"ComponentsList": "Material has huge library components for all devices.",
			"Natural ": "When you understands basics, using material is natural and learning is easy."
		},
		"cons": {
			"FixedWithMaterial": "Material gives you strict guidelines how to use it. You cannot go wild with imagination.",
			"HardToChange": "If you want to change something its hard to do."
		},
		"githubStars": "+16k",
		"publishDate": "2017",
		"developerName": "Google",
		"githubLink": "https://github.com/material-components",
		"website": "https://material.io/"
	},
	{
		"name": "backbone.js",
		"displayName": "Backbone.js",
		"logo": "backbone.png",
		"stack": [
			"Framework",
			"Javascript"
		],
		"icons": [
			"framework",
			"js"
		],
		"shortDesc": "Comunicate trought RESTfull API",
		"desc": "<p>Backbone.js is another JS framework to build SPA applications. From other JS frameworks like Vue.js, React etc. the key is using MVP structure and saving filesize.</p><p>Backbone is attempting to create a minimal set of data-structure and user interface that are useful for building web applications. In basic backbone is taking care of all layers so you can focus on building your application.</p><p>Great advantage are layer each layer of app is responsible for its part so you will always know where to write your code. This is also well documented in code and on official page.</p>Backbone is also well annotated in code so you will quickly understands what to do in that layer.</p>",
		"pros": {
			"SmallSize": "Everything what you need is in small 7.9kb package.",
			"CommentedCode": "The code is well commented and also documented.",
			"Natural ": "When you understands basics, using material is natural and learning is easy."
		},
		"cons": {
			"HardDependencies": "For use you need to install laso Underscore.js.",
			"SmallCommunity": "Event its so small there are only few group who work with this framework.",
			"Updates": "Nowadays its not so updated."
		},
		"githubStars": "+28k",
		"publishDate": "2010",
		"developerName": "Jeremy Ashkenas",
		"githubLink": "https://github.com/jashkenas/backbone",
		"website": "https://backbonejs.org/"
	},
	{
		"name": "bootstrapvue",
		"displayName": "Bootstrap Vue",
		"logo": "bootstrapvue.png",
		"stack": [
			"Components",
			"Javascript",
			"Css"
		],
		"icons": [
			"components",
			"css",
			"js"
		],
		"shortDesc": "Build responsive apps with boostrap and vue.js",
		"desc": "<p>Bootstrap Vue is component library that is powered by Bootstrap and Vue.js frameworks. This gives you power to build responsive, mobile-first applications of websites.</p><p>Bootstrap Vue offers huge list of components that are ready to use. Great part is that you can use knowledge of bootstrap to build same websites. So you can use same components as in Bootstrap CSS framework. For logic Vue.js is taking part. Thanks to Vue you can customize components behavior and look very easy.</p><p>Bootstrap Vue offers plenty of customization options. With this components library you can also integrate other plugins that work with Vue or Bootstrap so you are not limited.</p>",
		"pros": {
			"SmallSize": "Everything what you need is in small 7.9kb package.",
			"CommentedCode": "The code is well commented and also documented.",
			"Natural ": "When you understands basics, using material is natural and learning is easy."
		},
		"cons": {
			"HardDependencies": "For use you need to install laso Underscore.js.",
			"SmallCommunity": "Event its so small there are only few group who work with this framework.",
			"Updates": "Nowadays its not so updated."
		},
		"githubStars": "+13k",
		"publishDate": "2019",
		"developerName": "Bootstrap",
		"githubLink": "https://github.com/bootstrap-vue/bootstrap-vue",
		"website": "https://bootstrap-vue.org/"
	},
	{
		"name": "puppeteer",
		"displayName": "Puppeteer",
		"logo": "puppeteer.png",
		"stack": [
			"Testing",
			"Javascript"
		],
		"icons": [
			"testing",
			"js"
		],
		"shortDesc": "Test your app like never before",
		"desc": "<p>Puppeteer is testing library focus on testing web apps. Running through the chrome browser you are able to test app like normal users do. With the option to generate PDF or screenshots of pages.</p><p>Also with puppeteer you can submit for simulating user input  and more. Puppeteer also offers chrome extension to enchant your testing experience.</p>",
		"pros": {
			"Testing": "Generating screenshot of each test is great advantage",
			"UserInput": "With option to really simulate user input will make your test reliable",
			"Updated": "Test are always run in latest version of chrome with latest Javascript features"
		},
		"cons": {
			"LessKnow": "Well there are more stable and popular testing frameworks",
			"Documentation": "Even with good documentation you still need to search for some information on the internet"
		},
		"githubStars": "+69k",
		"publishDate": "2018",
		"developerName": "Puppeteer",
		"githubLink": "https://github.com/puppeteer/puppeteer",
		"website": "https://pptr.dev/"
	},
	{
		"name": "nightwatch",
		"displayName": "Nightwatch",
		"logo": "nightwatch.png",
		"stack": [
			"Testing",
			"Javascript"
		],
		"icons": [
			"testing",
			"js"
		],
		"shortDesc": "Test your code in multiple ways",
		"desc": "<p>Nightwatch is browser automation powered by node.js. It's using the WebDriver API to run commands and browsers. Nightwatch is simple but powerful that enables you o build test using only javascript. After installation you are ready to go.</p><p>Nightwatch support running test in multiple ways. In parallel, sequentially or in implicit waits. Running on selenium or WebDriver under the hood its runnin real browsers.</p><p>With easy syntax you are also able to extend functionality of nightwatch.</p>",
		"pros": {
			"ModernE2E": "Zero configuration and powerful testing with Web API",
			"Evolving": "Nightwatch team is still listening to new suggestions",
			"RealBrowsers": "Running on real drivers tests are reliable"
		},
		"cons": {
			"New": "Nightwatch is getting popular now so community is smaller",
			"Updates": "In the way that its not stable like cypress you can expect more updates and fixes"
		},
		"githubStars": "+28k",
		"publishDate": "2018",
		"developerName": " Pine View Software AS ",
		"githubLink": "https://github.com/nightwatchjs/nightwatch",
		"website": "https://nightwatchjs.org/"
	}
]